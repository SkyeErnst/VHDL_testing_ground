library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nbit_full_adder_TB is
    generic (len : positive := 2);

end entity nbit_full_adder_TB;

architecture tb of nbit_full_adder_TB is
    
    component nbit_full_adder is
        generic (n : positive);
        port
        (
            i_a, i_b    : in std_logic_vector (len-1 downto 0);
            i_cin       : in std_logic;

            o_sum       : out std_logic_vector (len-1 downto 0);
            o_cout      : out std_logic
        );
    end component nbit_full_adder;

    signal tb_a, tb_b, tb_sum : std_logic_vector (len-1 downto 0) := (others => '0');
    signal tb_cin, tb_cout : std_logic := '0';
begin

    DUT:nbit_full_adder 
    generic map 
    (
        n => len
    );
    port map
    (
        i_a => tb_a,
        i_b => tb_b,
        i_cin => tb_cin,
        o_sum => tb_sum,
        o_cout => tb_cout
    );
    
    stimulus:
    process begin
        tb_a <= "00";
        tb_b <= "00";

        wait for 10 ns;

        assert (tb_sum = "00") report "addition error: 00+00" severity failure;

        wait;
    end process stimulus;
    
    
end architecture tb;